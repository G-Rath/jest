// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`handles circular inequality in errors properly 1`] = `
"FAIL __tests__/test-1.js
  ● test



      1 | it('test', () => {
    > 2 |   const error = new Error();
        |                 ^
      3 |   error.prop = error;
      4 |   const foo = {};
      5 |   foo.ref = foo;

      at Object.<anonymous> (__tests__/test-1.js:2:17)

FAIL __tests__/test-2.js
  ● test



      1 | it('test', () => {
    > 2 |   const error = new Error();
        |                 ^
      3 |   error.prop = error;
      4 |   const foo = {};
      5 |   foo.ref = foo;

      at Object.<anonymous> (__tests__/test-2.js:2:17)"
`;

exports[`handles circular inequality in errors properly 2`] = `
"Test Suites: 1 failed, 1 total
Tests:       1 failed, 1 total
Snapshots:   0 total
Time:        <<REPLACED>>
Ran all test suites."
`;

exports[`handles circular inequality properly 1`] = `
"FAIL __tests__/test-1.js
  ● test

    expect(received).toEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 3

    - Object {}
    + Object {
    +   "ref": [Circular],
    + }

      3 |   foo.ref = foo;
      4 |
    > 5 |   expect(foo).toEqual({});
        |               ^
      6 | });

      at Object.toEqual (__tests__/test-1.js:5:15)

FAIL __tests__/test-2.js
  ● test

    expect(received).toEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 3

    - Object {}
    + Object {
    +   "ref": [Circular],
    + }

      3 |   foo.ref = foo;
      4 |
    > 5 |   expect(foo).toEqual({});
        |               ^
      6 | });

      at Object.toEqual (__tests__/test-2.js:5:15)"
`;

exports[`handles circular inequality properly 2`] = `
"Test Suites: 2 failed, 2 total
Tests:       2 failed, 2 total
Snapshots:   0 total
Time:        <<REPLACED>>
Ran all test suites."
`;
